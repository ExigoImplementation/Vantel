@model CheckoutViewModel

<div class="row">
    <div class="col-lg-12">
        <div class="form-group">
            <label for="NameOnCard">@Resources.Common.NameOnCard: </label>
            @Html.TextBoxFor(x => x.CreditCardPayment.NameOnCard, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.CreditCardPayment.NameOnCard, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="form-group">
            <label for="CardNumber">@Resources.Common.CardNumber: </label>
            @*@Html.TextBoxFor(x => x.CreditCardPayment.CardNumber, "", new { @class = "form-control" })*@
            <div id="cc-wrapper"></div>
            @Html.ValidationMessageFor(x => x.CreditCardPayment.CardNumber, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.CreditCardPayment.Token, new { @class = "creditcard-token" })
            @Html.HiddenFor(m => m.CreditCardPayment.Display, new { @class = "creditcard-display" })
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-6">
        <div class="form-group">
            <label for="CardNumber">CVV: </label>
            @Html.TextBoxFor(x => x.CreditCardPayment.CVV, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.CreditCardPayment.CVV, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-lg-6">
        <div class="form-group">
            <label for="CardType">@Resources.Common.CreditCardType: </label>
            @Html.DropDownListFor(x => x.CreditCardPayment.Type, Identity.Owner.Market.AvailableCardTypes, null, new { @class = "form-control" })
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="form-group">
            @{
                var billingSameAsChecked = Model.BillingAddressSameAsShipping ? "checked=checked" : "";
            }
            <input type="checkbox" class="checkmark" name="@Html.NameFor(x => x.BillingAddressSameAsShipping)" id="@Html.IdFor(x => x.BillingAddressSameAsShipping)" @billingSameAsChecked value="true" />
            <label for="@Html.IdFor(x=> x.BillingAddressSameAsShipping)" class="checkbox-label"> @Resources.Common.BillingAddressSameAsShipping</label>
        </div>
    </div>
</div>

<br />

<div id="PaymentAddress">
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                <label for="Address1">@Resources.Common.BillingAddress: </label>
                @Html.TextBoxFor(x => x.CreditCardPayment.BillingAddress.Address1, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CreditCardPayment.BillingAddress.Address1, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.TextBoxFor(x => x.CreditCardPayment.BillingAddress.Address2, "", new { @class = "form-control" })
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-lg-4">
            <div class="form-group">
                <label for="City">@Resources.Common.City: </label>
                @Html.TextBoxFor(x => x.CreditCardPayment.BillingAddress.City, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CreditCardPayment.BillingAddress.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-4">
            <div class="form-group">
                <label for="State">@Resources.Common.State: </label>
                @Html.DropDownListFor(x => x.CreditCardPayment.BillingAddress.State, Html.Regions(GlobalUtilities.GetCurrentMarket(this.Context).CookieValue), "Choose...", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CreditCardPayment.BillingAddress.State, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-4">
            <div class="form-group">
                <label for="Zip">@Resources.Common.Zip: </label>
                @Html.TextBoxFor(x => x.CreditCardPayment.BillingAddress.Zip, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CreditCardPayment.BillingAddress.Zip, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>

@Html.HiddenFor(x => x.CreditCardPayment.BillingAddress.Country)

<script>


    require(["jquery", "mask"], function ($) {

        // Event Handlers
        function registerEventHandlers() {
            $('#@Html.IdFor(x=> x.BillingAddressSameAsShipping)').on('change', function () {
                if ($('[name="@Html.NameFor(x=> x.BillingAddressSameAsShipping)"]').prop('checked'))
                    $('#PaymentAddress').slideUp();
                else
                    $('#PaymentAddress').slideDown();
            }).triggerHandler('change');
            @*$('#@Html.IdFor(x=> x.BillingAddressSameAsShipping)').prop("checked",@Model.BillingAddressSameAsShipping.ToString().ToLower()).trigger('change');*@

            $('#@Html.IdFor(x => x.CreditCardPayment.CardNumber)').mask('0000-0000-0000-0000');
            $('#@Html.IdFor(x => x.CreditCardPayment.CVV)').mask('000');
        };

        // Initialization
        function init() {
            registerEventHandlers();
        }
        init();

    });
</script>