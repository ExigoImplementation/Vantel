@model CheckoutViewModel
@{
    var contextID = Guid.NewGuid();
    var hasShipMethods = Model.ShipMethods != null;
    Model.ShippingAddress.Country = Model.ShippingAddress.Country.IsNullOrEmpty() ? GlobalUtilities.GetCurrentMarket(this.Context).CookieValue : Model.ShippingAddress.Country;
}

<div id="view-checkout-shipping">
    <div class="row">
        <div class="col-lg-6">
            <div class="form-group">
                <label for="Name">@Resources.Common.Name: </label>
                @Html.TextBoxFor(m => m.ShippingAddress.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ShippingAddress.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group">
                <label for="LastName">@Resources.Common.LastName: </label>
                @Html.TextBoxFor(m => m.ShippingAddress.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ShippingAddress.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                <label for="CompanyName">@Resources.Common.CompanyLegalName: </label>
                @Html.TextBoxFor(x => x.ShippingAddress.Company, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ShippingAddress.Company, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                <label for="Address1">@Resources.Common.Address: </label>
                @Html.TextBoxFor(x => x.ShippingAddress.Address1, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ShippingAddress.Address1, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.TextBoxFor(x => x.ShippingAddress.Address2, new { @class = "form-control" })
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                <label for="City">@Resources.Common.City: </label>
                @Html.TextBoxFor(x => x.ShippingAddress.City, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ShippingAddress.City, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-8">
            <div class="form-group">
                <label for="State">@Resources.Common.State: </label>
                @Html.DropDownListFor(c => c.ShippingAddress.State,
                    selectList: Html.Regions(Model.ShippingAddress.Country, Model.ShippingAddress.State),
                    htmlAttributes: new
                    {
                        @class = "form-control",
                        id = Html.IdFor(c => c.ShippingAddress.State) + "_" + contextID,
                        data_role = "State"
                    })
                @Html.ValidationMessageFor(c => c.ShippingAddress.State)
            </div>
        </div>
        <div class="col-lg-4">
            <div class="form-group">
                <label for="Zip">@Resources.Common.Zip: </label>
                @Html.TextBoxFor(x => x.ShippingAddress.Zip, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ShippingAddress.Zip, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                <label for="Notes">@Resources.Common.Notes: </label>
                @Html.TextAreaFor(x => x.ShippingAddress.Notes, 8, 0, new { @class = "form-control" })
            </div>
        </div>
    </div>
    @Html.HiddenFor(x => x.ShippingAddress.Country)
</div>

<div id="view-checkout-shipmethod">
    <div class="row">
        <div class="col-xs-11">
            <div class="form-group">
                <select id="lstShipMethod" name="@Html.NameFor(c => c.ShipMethodID)" class="form-control">
                    @if (hasShipMethods)
                    {
                        foreach (var shipMethod in Model.ShipMethods.OrderBy(s => s.Price))
                        {
                            var selected = shipMethod.Selected ? "selected=selected" : "";
                            <option value="@shipMethod.ShipMethodID" data-description="@shipMethod.ShipMethodDescription" @selected>@shipMethod.ShipMethodDescription @shipMethod.Price.ToString("C")</option>
                        }
                    }
                    else
                    {
                        <option value="">@Resources.Common.ChooseShippingMethod</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-xs-1">
            <div id="shipmethodLoadingContainer" class="text-center" style="display:none;">
                <img src="@Url.Content("~/content/images/loading/circle-24.gif")" /> @Resources.Common.Loading
            </div>
        </div>
        </div>

</div>
