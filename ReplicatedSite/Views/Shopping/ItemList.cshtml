@model ItemListViewModel
@{
    ViewBag.Title = Resources.Common.Shopping;

    var hasError = !Request.QueryString["message"].IsNullOrEmpty() || (ViewBag.PartyInvalid != null && ViewBag.PartyInvalid == true);
    var partyInvalidMessage = hasError ? "The Party you are trying to shop under is no longer valid. Don't worry, you can still shop and you may choose another party on the final page before order submission." : "";
    var hasOpenParties = ViewBag.OpenParties != null;
    List<Party> OpenParties = hasOpenParties ? ViewBag.OpenParties : new List<Party>();
    var canChooseOpenParty = ViewBag.ActiveParty == null && hasOpenParties && OpenParties.Count() > 0;

    var pageHeader = new PageHeader
    {
        PageName = ViewBag.Title,      
    };
}

@Html.Partial("~/Views/Shared/Partials/_PageHeader.cshtml", pageHeader)

<section id="content">
    <div class="content-wrap">
        <div class="container clearfix">
            <div id="view-item-list">
                <div class="row margin-10">
                    <!-- Category Listing -->
                    <div class="col-lg-3 d-none d-sm-none d-md-none d-lg-block">
                        <div id="categories-container">
                            <!-- Desktop Nav -->
                            @* Normal Menu *@
                            <div class="hidden-xs hidden-sm" id="shopping-nav">
                                <div class="nobottommargin">
                                    <div class="sidebar-widgets-wrap">

                                        <div class="widget widget-filter-links clearfix">

                                            <h4>Filter Category</h4>
                                            <ul class="custom-filter" data-container="#shop" data-active-class="active-filter">
                                                <li class="widget-filter-reset active-filter"><a data-categoryid="0">Clear</a></li>
                                                @foreach (var category in Model.Categories)
                                                {
                                                    var hasSubcategories = (category.Subcategories != null && category.Subcategories.Count() > 0);
                                                    <li>
                                                        <a data-categoryid="@category.WebCategoryID">@category.WebCategoryDescription</a>
                                                    </li>
                                                    if (hasSubcategories)
                                                    {
                                                        foreach (var subcategory in category.Subcategories)
                                                        {
                                                            <li>
                                                                <a data-categoryid="@subcategory.WebCategoryID">@subcategory.WebCategoryDescription</a>
                                                            </li>
                                                        }
                                                    }
                                                }
                                            </ul>

                                        </div>

                                        <div class="widget widget-filter-links clearfix">

                                            <h4>Sort By</h4>
                                            <ul class="shop-sorting">
                                                <li class="widget-filter-reset active-filter"><a data-sort-by="original-order">Clear</a></li>
                                                <li><a data-sort-by="name">Name</a></li>
                                                <li><a data-sort-by="price_lh">Price: Low to High</a></li>
                                                <li><a data-sort-by="price_hl">Price: High to Low</a></li>
                                            </ul>

                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- End Category Listing -->
                    <div class="col col-lg-9" style="min-height:550px;">
                        @* Party Info Bar *@
                        @*@if (ViewBag.ActiveParty != null)
                        {
                            Party ActiveParty = ViewBag.ActiveParty;

                            @Html.DisplayFor(c => ActiveParty, "PartyDetailBar")
                        }
                        else if (canChooseOpenParty)
                        {
                            <div class="party-link">Should a hostess get credit for this order? <a data-role="find-party-modal">click here</a></div>

                            @Html.Partial("Partials/_PartyHostModal", OpenParties)
                        }*@
                        @* End Party Info Bar*@

                        <!-- Item List -->
                        <div class="row margin-15" id="itemList">
                            <p class="text-center">
                                <!-- Dynamically Injected -->
                                <img class="img-responsive" src="@Url.Content("~/Content/images/loading/circle-48.gif")" />
                            </p>
                        </div>
                    </div>
                </div>

                @if (Settings.ShowChooseEnrollerInShopping)
                {
                    <!-- How did you hear about us modal -->
                    <div class="modal fade" data-backdrop="static" data-keyboard="false" id="hearAboutUsModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">@Resources.Common.EnrollerSearchHeader</h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <a id="chooseConsulant" class="btn btn-primary text-uppercase">
                                                @Resources.Common.ChooseEnroller
                                            </a>
                                        </div>
                                        <div class="col-sm-6">
                                            <a id="notReferred" class="btn btn-primary text-uppercase">@Resources.Common.NotReferredShopNow</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>


<script type="text/x-handlebars-template" id="item-template">
    {{#each items}}
    <div data-itemcode="{{ItemCode}}" class="col-12 col-lg-6 col-xl-4 item-row">
        <div class="product sf-{{CategoryID}} clearfix shop-item" href="{{ItemUrl}}">
            <div class="product-image">
                <input type="hidden" name="ItemCode" value="{{ItemCode}}" />
                <input id="ItemDescription" type="hidden" name="ItemDescription" value="{{ItemDescription}}"/>
                @Html.Hidden("Quantity", 1)
                <a href="{{ItemUrl}}"><img src="{{LargeImageUrl}}" alt="{{ShortDetail1}}"></a>
                {{#if IsGroupMaster}}
                <div class="product-overlay group-master">
                    <a href="{{ItemUrl}}" class="group-master"><i class="fa-shopping-cart"></i><span> @Resources.Common.ViewDetails</span></a>
                </div>
                {{else}}
                <div class="product-overlay {{#if AllowOnAutoOrder}}product-withautoorder{{/if}}">
                <a class="item-quick-view" data-itemcode="{{ItemCode}}"><i class="fa-search-plus"></i><span> @Resources.Common.QuickView</span></a>
                <a class="add-to-cart" data-loading-text="@Resources.Common.Loading" data-role="item.addtoorder" data-itemcode="{{ItemCode}}"><i class="fa-shopping-cart"></i><span> @Resources.Common.AddToCart</span></a>
                {{#if AllowOnAutoOrder}}
                <a class="add-to-cart" data-loading-text="@Resources.Common.Loading" data-role="item.addtoautoorder" data-itemcode="{{ItemCode}}"><i class="fa-shopping-cart"></i><span> @Resources.Common.AddToAutoOrder</span></a>
                {{/if}}
                </div>
                {{/if}}
            </div>
            <div class="product-desc center">
                <div class="product-title"><h3><a href="{{ItemUrl}}">{{ItemDescription}}</a></h3></div>
                <div class="product-price">{{PriceString}}</div>
            </div>
        </div>
    </div>
    {{/each}}
</script>


@section scripts
{
    <script>
    require(["jquery", "ajax", "toastr",'handlebars', "shopping", "extensions", "pubsub"],
            function($, ajax, toastr, handlebars, shopping) {
                var itemListUrl = "@Url.Action("GetItemList")",
                    model = @Model.CategoryID,
                    context = "#view-item-list",
                    $context = $(context),
                    addItemUrl = '@Url.Action("additemtocart")',
                    loadingImageUrl = '@Url.Content("~/Content/images/loading/circle-48.gif")',
                    // If we need to trigger the 'Choose Enroller' modal..
                    askForEnroller = @Settings.ShowChooseEnrollerInShopping.ToString().ToLower(),
                    chooseEnrollerUrl = '@Url.Action("GetEnrollerSearchModal", "App")',
                    noReferredUrl = '@Url.Action("SetNoReferred", "Shopping")',
                    categoryID = "0",
                    $catFilter = $('.custom-filter'),
                    sortType = "";

                // Parties
                var hasError = @hasError.ToString().ToLower(),
                    partyErrorMessage = '@partyInvalidMessage';

                var _response = [];

                function registerEventHandlers() {
                    // Parties
                    if (hasError && partyErrorMessage.length > 0) {
                        toastr.error(partyErrorMessage, 'Oops! Something went wrong.');
                    }

                  $("#mobile-shopping-nav").on('change', function() {
                        var $this = $(this).children("option:selected"),
                            categoryID = $this.data('categoryid'),
                            $parentListItem = $this.parents("li").first(),
                            $nonMobileListItem = $("#shopping-nav").find("[data-categoryid='" + categoryID + "']");

                        $("#shopping-nav li").removeClass("active");
                        $nonMobileListItem.addClass("active");
                        helpers.showLoadingImage();
                        actions.loadItemList(categoryID);
                  });

                    $catFilter.each(function () {
                        var element = $(this),
                            elementContainer = element.attr('data-container'),
                            elementActiveClass = element.attr('data-active-class'),
                            elementDefaultFilter = element.attr('data-default');

                        if (!elementActiveClass) { elementActiveClass = 'active-filter'; }

                        element.find('a').off('click').on('click', function () {
                            element.find('li').removeClass(elementActiveClass);
                            $(this).parent('li').addClass(elementActiveClass);
                            var selector = $(this).attr('data-filter');
                            return false;
                        });

                        if (elementDefaultFilter) {
                            element.find('li').removeClass(elementActiveClass);
                            element.find('[data-filter="' + elementDefaultFilter + '"]').parent('li').addClass(elementActiveClass);
                        }
                    });

			        $('.shop-sorting li').click( function() {
				        $('.shop-sorting').find('li').removeClass( 'active-filter' );
				        $(this).addClass( 'active-filter' );
				        var sortByValue = $(this).find('a').attr('data-sort-by');
				        actions.SortList(sortByValue);
				        return false;
			        });

                    //$("[data-sort-by]").click(function () {
                    //    sortType = $(this).data('sort-by');
                    //    var parentLI = $(this).parent();
                    //    if (sortType != "original-order")
                    //    {
                    //        parentLI.siblings(".widget-filter-reset").removeClass("active-filter");
                    //    }
                    //    else
                    //    {
                    //        parentLI.addClass("active-filter");
                    //    }

                    //    helpers.showLoadingImage();
                    //    actions.SortList(sortType);
                    //});


                    $("[data-categoryid]").click(function () {
                        var categoryid = $(this).data('categoryid');
                        helpers.showLoadingImage();
                        actions.loadItemList(categoryid);
                    });

                    $('#notReferred').on("click", function() { actions.notReferred(); });
                    $('#chooseConsulant').on("click", function() { actions.chooseEnroller(); });
                }

                var actions = {
                    loadItemList: function (categoryid) {
                        var categoryID = (categoryid == undefined) ? model.CategoryID : categoryid;
                        ajax.json({
                            url: itemListUrl,
                            data: { categoryID: categoryID },
                            success: function (response) {
                                if (response.success) {
                                    _response = response;
                                    let source = $("#item-template").html();
                                    let template = handlebars.compile(source);
                                    let html = template(response);
                                    $('#itemList').html(html);
                                    $('.item-row', $context).each(function () {
                                        shopping.bind(this);
                                    })
                                    if (sortType && sortType != "original-order") actions.SortList(sortType);
                                    if (helpers.isMobileDevice())
                                        $('.product-overlay').addClass('d-none');
                                }
                            },
                            error: function (xhr, error, data) {
                                console.log("error loading itemlist", xhr);
                            }
                        });
                    },
                    notReferred: function () {
                        ajax.json({
                            url:noReferredUrl,
                            success: function (response) {
                                if (response.success) {
                                    $("#hearAboutUsModal").modal("hide");
                                }
                                else {
                                    toastr.error(Resources.Common.SearchNoResults, Resources.Common.WereSorry);
                                }
                            }
                        });
                    },
                    chooseEnroller: function () {
                        ajax.json({
                            url: chooseEnrollerUrl,
                            success: function(response) {
                                if (response.success) {
                                    $('#hearAboutUsModal .modal-body').html(response.html);

                                    // Pubsub event for enroller selection
                                    window.on('enrollment.showenrollerinfo', function (enroller) {
                                        window.location.replace('/' + enroller.WebAlias.trim() + '/products');
                                    });
                                } else {
                                    console.log(response);
                                }
                            }
                        });
                    },
                    SortList: function (type) {
                        switch (type) {
                            case "name":
                                _response.items = _response.items.sort(function (a, b) { return a.ItemDescription.localeCompare(b.ItemDescription); });
                                break;
                            case "price_lh":
                                _response.items = _response.items.sort(function (a, b) { return a.Price - b.Price; });
                                break;
                            case "price_hl":
                                _response.items = _response.items.sort(function (a, b) { return b.Price - a.Price; });
                                break;
                            default:
                                actions.loadItemList(categoryID);
                                return;
                        }
                        let source = $("#item-template").html();
                        let template = handlebars.compile(source);
                        let html = template(_response);
                        $('#itemList').html(html);
                    },
                }

                var helpers = {
                    showLoadingImage: function() {
                        $('#itemList').html('<p class="text-center"><img class="img-responsive" src="{0}" /></p>'.format(loadingImageUrl));
                    },
                    isMobileDevice: function () {
                        // device detection
                        var check = false;
                        (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
                        return check;
                    }
                }

                function _init() {
                    registerEventHandlers();
                    actions.loadItemList();

                    if (askForEnroller) {
                        var currentWebAlias = '@Identity.Owner.WebAlias';
                        var defaultWebAlias = '@GlobalSettings.ReplicatedSites.DefaultWebAlias';

                        var selectedDistributor = '@Model.PropertyBag.SelectedDistributor';
                        if (currentWebAlias == defaultWebAlias && selectedDistributor == '') {
                            $("#hearAboutUsModal").modal("show");
                        }
                    }
                }
                _init();
            });
    </script>
}